name: Build Python Wheel

on:
  push:
    branches:
      - main  
    tags:
      - 'refs/tags/v*' 

jobs:
  build:
    runs-on: ubuntu-latest  

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'  

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel

    - name: Create Virtualenv and Build Wheel
      run: |
        python -m venv .venv
        make venv
        make bdist_wheel

    - name: Upload Wheel as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-wheel
        path: dist/*.whl


  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')  # FÃ¼hre diesen Job nur aus, wenn ein Tag gepusht wird
    steps:
    - uses: actions/checkout@v4
    - name: Download Wheel from Artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-wheel
        path: dist

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: 'New release ${{ github.ref }}'
        draft: false
        prerelease: true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*.whl
        asset_name: shunk-${{ github.ref }}.whl
        asset_content_type: application/octet-stream