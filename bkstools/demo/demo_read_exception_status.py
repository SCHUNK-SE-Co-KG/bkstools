#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# Created on 2021-08-06
#
# @author: Dirk Osswald
'''
Read the Modbus-RTU exception status via function code 7. |n
- Will work with Modbus-RTU slaves only.|n
- The firmware currently reports exception status 0x00 always|n
|n
Example usage:|n
-  %(prog)s -H COM6,12
'''


import os.path
import sys

from bkstools.bks_lib.bks_base import BKSBase, GetModbusSettings
from bkstools.bks_lib.debug import Print, Error, Var, ApplicationError, g_logmethod  # @UnusedImport
from bkstools.bks_lib import bks_options

def main():
    if ( "__file__" in globals() ):
        prog = os.path.basename( globals()["__file__"] )
    else:
        # when runnging as an exe generated by py2exe then __file__ is not defined!
        prog = "demo_read_exception_status.exe"

    #--- create a command line option parser and parse the command line:
    parser = bks_options.cBKSTools_OptionParser( prog=prog,
                                                 description = __doc__ )   # @UndefinedVariable

    args = parser.parse_args()

    #--- Create a BKSBase object to interact with the gripper:
    if ( GetModbusSettings( args.host ) is None ):
        Error( f"Read exception status works for Modbus-RTU devices only!\n{args.host!r} does not denote a Modbus-RTU device." )
        return 1
    bksb = BKSBase( args.host, debug=args.debug, repeater_timeout=args.repeat_timeout, repeater_nb_tries=args.repeat_nb_tries )

    es = bksb.ReadExceptionStatus()
    print( f"Modbus-RTU exception status: 0x{es:02x}" )


if __name__ == '__main__':
    from pyschunk.tools import attach_to_debugger
    rc = attach_to_debugger.AttachToDebugger( main )
    sys.exit( rc )
    #main()
