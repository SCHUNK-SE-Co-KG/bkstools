#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# Created on 18.10.2018
#
# @author: Dirk Osswald
'''
Perform a series of move_abs and move_rel commands using the repeate_command_toggle bit
|n
Example usage:|n
-  %(prog)s -H 10.49.57.13
'''


import os.path

import pyschunk.tools.mylogger
import time
from bkstools.bks_lib.bks_module import BKSModule, HandleWarningPrintOnly  # @UnusedImport
from bkstools.bks_lib.debug import Print, Var, ApplicationError, g_logmethod  # @UnusedImport


logger = pyschunk.tools.mylogger.getLogger( "BKSTools.demo.demo_repeat_command" )
pyschunk.tools.mylogger.setupLogging()
g_logmethod = logger.info

from bkstools.bks_lib import bks_options


def main():
    if ( "__file__" in globals() ):
        prog = os.path.basename( globals()["__file__"] )
    else:
        # when runnging as an exe generated by py2exe then __file__ is not defined!
        prog = "demo_repeat_command.exe" #@ReservedAssignment

    parser = bks_options.cBKSTools_OptionParser( prog=prog,
                                                 description = __doc__ )   # @UndefinedVariable

    args = parser.parse_args()


    bks = BKSModule( args.host,
                     sleep_time=None,
                     #handle_warning=HandleWarningPrintOnly
                     debug=args.debug,
                     repeater_timeout=args.repeat_timeout,
                     repeater_nb_tries=args.repeat_nb_tries
                     )


    Print( "Make ready...")
    bks.MakeReady()

    n = 0
    vel = 15000
    while True:

        Print( "Loop %d..." % n)
        for pos in range( 5000, 50001, 15000 ):
            Print( f"  move_abs from {bks.actual_pos} to {pos}")
            bks.MoveToAbsolutePosition( pos, vel )

        rpos = -15000
        for i in range(3):  # @UnusedVariable
            Print( f"  move_rel from {bks.actual_pos} {rpos}")
            bks.MoveToRelativePosition( rpos, vel )

        time.sleep(1.0)

        for pos in range( 5000, 50001, 15000 ):
            Print( f"  move_abs from {bks.actual_pos} to {pos} interrupted")
            bks.MoveToAbsolutePosition( pos, vel, do_wait_for_success=False )
            time.sleep( 0.300 )
        bks.MoveToAbsolutePosition( 50000, vel )

        for i in range(3):  # @UnusedVariable
            Print( f"  move_rel from {bks.actual_pos} {rpos} interrupted")
            bks.MoveToRelativePosition( rpos, vel, do_wait_for_success=False )
            time.sleep( 0.300 )

        time.sleep(3.0)

        n += 1

if __name__ == '__main__':
    from pyschunk.tools import attach_to_debugger
    attach_to_debugger.AttachToDebugger( main )
    #main()
