#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# Created on 18.10.2018
#
# @author: Dirk Osswald
'''
Get all or selected system messages of a SCHUNK BKS gripper (like EGI/EGU/EGK/EZU)|n
|n
Example usage:|n
-  %(prog)s -H 10.49.57.13
-  %(prog)s -H 10.49.57.13 -i 0-10,25-31
'''

import os.path
import time

import pyschunk.tools.mylogger
from bkstools.bks_lib.bks_base import BKSBase
from bkstools.bks_lib.debug import Print, Var, ApplicationError, g_logmethod  # @UnusedImport


logger = pyschunk.tools.mylogger.getLogger( "BKSTools.bks_ref" )
pyschunk.tools.mylogger.setupLogging()
g_logmethod = logger.info

from bkstools.bks_lib import bks_options


def main():
    if ( "__file__" in globals() ):
        prog = os.path.basename( globals()["__file__"] )
    else:
        # when runnging as an exe generated by py2exe then __file__ is not defined!
        prog = "bks_get_system_messages.exe"

    parser = bks_options.cBKSTools_OptionParser( prog=prog,
                                                 description = __doc__ )     # @UndefinedVariable

    parser.add_argument( '-i', "--error_indices",
                         dest="error_indices",
                         default="0-31",
                         type=str,
                         help="""The error indices to get. Can be a single index like "0", a list of comma separated indices like "1,2,3", a range like "0-10" or a combination of the latter. Default is %(default)s.""" )
    parser.add_argument( '-p', '--period',
                         dest="period",
                         default=None,
                         help="""Period in s for cyclic updating. Use 0.0 to cycle as fast as possible. The updates are printed on change only""" )
    parser.add_argument( '--nostrip',
                         dest="do_not_strip",
                         action="store_true",
                         help="""Flag, if set then the strings are not stripped. By default the trailing space or \\0 chars are automatically stripped away.""" )

    args = parser.parse_args()

    error_indices= pyschunk.tools.util.RangeDefToList( args.error_indices )

    bks = BKSBase( args.host, debug=args.debug, repeater_timeout=args.repeat_timeout, repeater_nb_tries=args.repeat_nb_tries )


    if ( args.period is None ):
        for i in error_indices:
            bks.sys_msg_req = i
            #time.sleep(0.050)
            msg = bks.sys_msg_buffer
            if ( not args.do_not_strip ):
                msg = msg.rstrip()
                msg = msg.rstrip( '\0' )

            Print( "%03d: %r" % (i,msg) )
    else:
        try:
            old_msg=""
            while True:
                # cyclic updates requested

                i = error_indices[0]
                bks.sys_msg_req = i
                msg = bks.sys_msg_buffer
                if ( not args.do_not_strip ):
                    msg = msg.strip()

                if ( old_msg != msg ):
                    old_msg = msg
                    Print( "\n%s" % (time.strftime( "%Y-%m-%d %H:%M:%S", time.localtime( time.time()) ) ) )
                    Print( "%03d: %r" % (i,msg) )

                    for i in error_indices[1:]:
                        bks.sys_msg_req = i
                        #time.sleep(0.050)
                        msg = bks.sys_msg_buffer
                        if ( not args.do_not_strip ):
                            msg = msg.strip()

                        Print( "%03d: %r" % (i,msg) )
                time.sleep( float(args.period) )
        except KeyboardInterrupt:
            print( "\nInterrupted by user" )

if __name__ == '__main__':
    from pyschunk.tools import attach_to_debugger
    attach_to_debugger.AttachToDebugger( main )
    #main()
